{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"ngx-file-drop\";\n\nfunction UploadVideoComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtext(0, \" Optional custom content that replaces the the entire default content. \");\n    i0.ɵɵelementStart(1, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function UploadVideoComponent_ng_template_2_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const openFileSelector_r2 = restoredCtx.openFileSelector;\n      return i0.ɵɵresetView(openFileSelector_r2());\n    });\n    i0.ɵɵtext(2, \"Browse Files\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadVideoComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r5.relativePath);\n  }\n}\n\nexport let UploadVideoComponent = /*#__PURE__*/(() => {\n  class UploadVideoComponent {\n    constructor() {\n      this.files = [];\n    }\n\n    dropped(files) {\n      this.files = files;\n\n      for (const droppedFile of files) {\n        // Is it a file?\n        if (droppedFile.fileEntry.isFile) {\n          const fileEntry = droppedFile.fileEntry;\n          fileEntry.file(file => {\n            // Here you can access the real file\n            console.log(droppedFile.relativePath, file);\n            /**\r\n             // You could upload it like this:\r\n             const formData = new FormData()\r\n             formData.append('logo', file, relativePath)\r\n                         // Headers\r\n             const headers = new HttpHeaders({\r\n              'security-token': 'mytoken'\r\n            })\r\n                         this.http.post('https://mybackend.com/api/upload/sanitize-and-save-logo', formData, { headers: headers, responseType: 'blob' })\r\n             .subscribe(data => {\r\n              // Sanitized logo returned from backend\r\n            })\r\n             **/\n          });\n        } else {\n          // It was a directory (empty directories are added, otherwise only files)\n          const fileEntry = droppedFile.fileEntry;\n          console.log(droppedFile.relativePath, fileEntry);\n        }\n      }\n    }\n\n    fileOver(event) {\n      console.log(event);\n    }\n\n    fileLeave(event) {\n      console.log(event);\n    }\n\n  }\n\n  UploadVideoComponent.ɵfac = function UploadVideoComponent_Factory(t) {\n    return new (t || UploadVideoComponent)();\n  };\n\n  UploadVideoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadVideoComponent,\n    selectors: [[\"app-upload-video\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[1, \"center\"], [\"dropZoneLabel\", \"Drop files here\", 3, \"onFileDrop\", \"onFileOver\", \"onFileLeave\"], [\"ngx-file-drop-content-tmp\", \"\"], [1, \"upload-table\"], [1, \"table\"], [1, \"upload-name-style\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"]],\n    template: function UploadVideoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ngx-file-drop\", 1);\n        i0.ɵɵlistener(\"onFileDrop\", function UploadVideoComponent_Template_ngx_file_drop_onFileDrop_1_listener($event) {\n          return ctx.dropped($event);\n        })(\"onFileOver\", function UploadVideoComponent_Template_ngx_file_drop_onFileOver_1_listener($event) {\n          return ctx.fileOver($event);\n        })(\"onFileLeave\", function UploadVideoComponent_Template_ngx_file_drop_onFileLeave_1_listener($event) {\n          return ctx.fileLeave($event);\n        });\n        i0.ɵɵtemplate(2, UploadVideoComponent_ng_template_2_Template, 3, 0, \"ng-template\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"table\", 4)(5, \"thead\")(6, \"tr\")(7, \"th\");\n        i0.ɵɵtext(8, \"Name\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"tbody\", 5);\n        i0.ɵɵtemplate(10, UploadVideoComponent_tr_10_Template, 4, 1, \"tr\", 6);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.files);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.NgxFileDropComponent, i2.NgxFileDropContentTemplateDirective]\n  });\n  return UploadVideoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}